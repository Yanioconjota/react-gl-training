{"version":3,"sources":["components/AddCategory.js","GifItem.js","helpers/getGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","className","type","placeholder","onChange","target","value","Button","variant","GifItem","title","url","src","alt","getGifs","category","limit","offset","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_large","GifGrid","state","setState","loading","useEffect","then","imgs","useFetchGifs","Row","Col","xs","md","onClick","GifExpertApp","categories","ReactDOM","render","Container","document","getElementById"],"mappings":"wPA8CeA,EA1CY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAGwB,KAFPJ,EAEJK,SACbP,GAAc,iBAAM,CACnBE,MAEDC,EAAc,MAKhB,SACE,sBAAKK,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLC,YAAY,iBACZC,SAtBkB,SAACN,GACzBF,EAAcE,EAAEO,OAAOC,QAsBjBL,UAAU,eACVK,MAAOX,IAET,cAACY,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,YAA9B,2B,eCzBOC,EATC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACvB,OACE,sBAAKV,UAAU,oCAAf,UACE,qBAAKW,IAAKD,EAAKE,IAAKH,EAAOT,UAAU,UACrC,6BAAKS,Q,wBCJEI,EAAO,uCAAG,WAAOC,EAAUC,EAAOC,GAAxB,uBAAAC,EAAA,4DACN,2CAETP,EAHe,iDAGiCQ,UADxCJ,GAFO,kBAKVC,EALU,mBAKMC,EALN,YACN,4CADM,SAMFG,MAAMT,GANJ,cAMfU,EANe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,gBAAgBlB,QAZd,kBAcda,GAdc,4CAAH,0DC0CLM,EArCC,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAIjB,EAA0BrB,mBAAS,CACjCsB,MAHiB,GAIjBC,OAAQ,IAFV,mBAAOc,EAAP,KAAcC,EAAd,KAKA,ECV0B,SAACjB,EAAUC,EAAOC,GAE5C,MAA0BvB,mBAAS,CACjC6B,KAAM,GACNU,SAAS,EACTjB,MAAOA,EACPC,OAAQA,IAJV,mBAAOc,EAAP,KAAcC,EAAd,KAmBA,OAZAE,qBAAU,WACRpB,EAAQC,EAAUC,EAAOC,GACtBkB,MAAM,SAAAC,GACLJ,EAAS,CACPT,KAAMa,EACNH,SAAS,EACTjB,MAAOA,EACPC,OAAQA,SAGb,CAACF,EAAUC,EAAOC,IAEdc,EDX2BM,CAAatB,EAAUgB,EAAMf,MAAOe,EAAMd,QAA9DW,EAAd,EAAQL,KAAcU,EAAtB,EAAsBA,QAStB,OACE,mCACIA,EAAU,mBAAGhC,UAAU,mCAAb,wBACV,qCACE,oBAAIA,UAAU,oCAAd,SAAmDc,IACnD,eAACuB,EAAA,EAAD,WACGV,EAAOH,KAAI,SAACC,GAAD,OACV,cAACa,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAAC,EAAD,eAAaf,KADUA,EAAIC,OAI/B,cAACpB,EAAA,EAAD,CAAQC,QAAQ,UAAUkC,QAlBnB,WACfV,EAAS,CACPhB,MAAOe,EAAMf,MAXE,GAYfC,OAAQc,EAAMd,OAAS,KAejB,gCETG0B,EAlBM,WAEnB,MAAoCjD,mBAAS,CAC3C,UADF,mBAAOkD,EAAP,KAAmBnD,EAAnB,KAIA,OACE,eAAC8C,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,oBAAIvC,UAAU,YAAd,0BACA,uBACA,cAAC,EAAD,CAAaR,cAAeA,EAAemD,WAAYA,IACvD,mCACE,cAAC,EAAD,CAA0B7B,SAAU6B,GAAtBA,S,QCZtBC,IAASC,OACP,cAACC,EAAA,EAAD,UACE,cAACT,EAAA,EAAD,UACE,cAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.8dc08aad.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const eventValue = inputValue;\r\n    \r\n    if (eventValue.trim() !== \"\") {\r\n      setCategories(() => [\r\n       inputValue,\r\n      ]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type something\"\r\n          onChange={handleInputChange}\r\n          className=\"form-control\"\r\n          value={inputValue}\r\n        />\r\n        <Button type=\"submit\" variant=\"secondary\">\r\n          Agregar\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","const GifItem = ({title, url}) => {\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} className=\"w-100\" />\r\n      <h4>{title}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifItem;","export const getGifs = async (category, limit, offset) => {\r\n  const apiKey = \"api_key=EJRMW0vkab9582ndI3I5UZQ4ObyWb3OK\";\r\n  const query = category;\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    query\r\n  )}&limit=${limit}&offset=${offset}&${apiKey}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_large.url,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport GifItem from \"./GifItem\";\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const multiplier = 12;\r\n\r\n  const [state, setState] = useState({\r\n    limit: multiplier,\r\n    offset: 0\r\n  });\r\n\r\n  const { data: images, loading } = useFetchGifs(category, state.limit, state.offset);\r\n\r\n  const loadMore = () => {\r\n    setState({\r\n      limit: state.limit + multiplier,\r\n      offset: state.offset + 1\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      { loading ? <p className=\"animate__animated animate__flash\">Loading...</p> :\r\n        <>\r\n          <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n          <Row>\r\n            {images.map((img) => (\r\n              <Col xs={12} md={3} key={img.id}>\r\n                <GifItem {...img} />\r\n              </Col>\r\n            ))}\r\n            <Button variant=\"primary\" onClick={loadMore}>Load More</Button>\r\n          </Row>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category, limit, offset) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n    limit: limit,\r\n    offset: offset,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category, limit, offset)\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n          limit: limit,\r\n          offset: offset \r\n        });\r\n      });\r\n  }, [category, limit, offset]);\r\n\r\n  return state; //{ data: [], loading: true }\r\n}","import { Col } from 'react-bootstrap';\r\nimport \"./GifExpertApp.scss\";\r\nimport { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([\r\n    \"Rambo\",\r\n  ]);\r\n\r\n  return (\r\n    <Col xs={12}>\r\n      <h2 className=\"text-info\">GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory setCategories={setCategories} categories={categories} />\r\n      <>\r\n        <GifGrid key={categories} category={categories} />\r\n      </>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'animate.css';\nimport GifExpertApp from \"./GifExpertApp\";\nimport { Container, Row } from \"react-bootstrap\";\n\nReactDOM.render(\n  <Container>\n    <Row>\n      <GifExpertApp />\n    </Row>\n  </Container>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}